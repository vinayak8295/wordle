{"ast":null,"code":"var _jsxFileName = \"/Users/int1347/Documents/React/wordel/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Board from \"./Components/Board\";\nimport Keyboard from './Components/Keyboard';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [board, setBoard] = useState(boardDefault);\n  const [currAttempt, setCurrAttempt] = useState({\n    attempt: 0,\n    letter: 0\n  });\n  const [wordSet, setWordSet] = useState(new Set());\n  const [correctWord, setCorrectWord] = useState(\"\");\n  const [disabledLetters, setDisabledLetters] = useState([]);\n  const [gameOver, setGameOver] = useState({\n    gameOver: false,\n    guessedWord: false\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Wordle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Keyboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eiSb/TW79jGjxUDt/dbx/8bjC9Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Board","Keyboard","useState","App","board","setBoard","boardDefault","currAttempt","setCurrAttempt","attempt","letter","wordSet","setWordSet","Set","correctWord","setCorrectWord","disabledLetters","setDisabledLetters","gameOver","setGameOver","guessedWord"],"sources":["/Users/int1347/Documents/React/wordel/src/App.js"],"sourcesContent":["import './App.css';\nimport Board from \"./Components/Board\";\nimport Keyboard from './Components/Keyboard';\nimport { useState } from 'react';\n\nfunction App() {\n  const [board, setBoard] = useState(boardDefault);\n  const [currAttempt, setCurrAttempt] = useState({ attempt: 0, letter: 0 });\n  const [wordSet, setWordSet] = useState(new Set());\n  const [correctWord, setCorrectWord] = useState(\"\");\n  const [disabledLetters, setDisabledLetters] = useState([]);\n  const [gameOver, setGameOver] = useState({\n    gameOver: false,\n    guessedWord: false,\n  });\n\n  return (\n    <div className=\"App\">\n      <nav>\n        <h1>Wordle</h1>\n        </nav>\n        <div className=\"game\">\n          <Board />\n          <Keyboard/>\n        </div>\n        \n       \n\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAEjC,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAACI,YAAY,CAAC;EAChD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC;IAAEO,OAAO,EAAE,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC,CAAC;EACzE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAIW,GAAG,EAAE,CAAC;EACjD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC;IACvCgB,QAAQ,EAAE,KAAK;IACfE,WAAW,EAAE;EACf,CAAC,CAAC;EAEF,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAA,uBACE;QAAA,UAAI;MAAM;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QACT,eACN;MAAK,SAAS,EAAC,MAAM;MAAA,wBACnB,QAAC,KAAK;QAAA;QAAA;QAAA;MAAA,QAAG,eACT,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QACP;EAAA;IAAA;IAAA;IAAA;EAAA,QAKJ;AAEV;AAAC,GA1BQjB,GAAG;AAAA,KAAHA,GAAG;AA4BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}