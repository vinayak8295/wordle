{"ast":null,"code":"var _jsxFileName = \"/Users/int1347/Documents/React/wordel/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Board from \"./Components/Board\";\nimport Keyboard from './Components/Keyboard';\nimport React from 'react';\nimport { useState } from 'react';\nimport { createContext } from 'react';\nimport { generateWordSet } from './word';\nimport { boardDefault } from './word';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nfunction App() {\n  _s();\n  const [board, setBoard] = useState(boardDefault);\n  const [currAttempt, setCurrAttempt] = useState({\n    attempt: 0,\n    letter: 0\n  });\n  const [wordSet, setWordSet] = useState(new Set());\n  const [correctWord, setCorrectWord] = useState(\"\");\n  const [disabledLetters, setDisabledLetters] = useState([]);\n  const [gameOver, setGameOver] = useState({\n    gameOver: false,\n    guessedWord: false\n  });\n  const onEnter = () => {\n    if (currAttempt.letter !== 5) return;\n    let currWord = \"\";\n    for (let i = 0; i < 5; i++) {\n      currWord += board[currAttempt.attempt][i];\n    }\n    if (wordSet.has(currWord.toLowerCase())) {\n      setCurrAttempt({\n        attempt: currAttempt.attempt + 1,\n        letter: 0\n      });\n    } else {\n      alert(\"Word not found\");\n    }\n    if (currWord === correctWord) {\n      setGameOver({\n        gameOver: true,\n        guessedWord: true\n      });\n      return;\n    }\n    console.log(currAttempt);\n    if (currAttempt.attempt === 5) {\n      setGameOver({\n        gameOver: true,\n        guessedWord: false\n      });\n      return;\n    }\n  };\n  const onDelete = () => {\n    if (currAttempt.letter === 0) return;\n    const newBoard = [...board];\n    newBoard[currAttempt.attempt][currAttempt.letter - 1] = \"\";\n    setBoard(newBoard);\n    setCurrAttempt({\n      ...currAttempt,\n      letter: currAttempt.letter - 1\n    });\n  };\n  const onSelectLetter = key => {\n    if (currAttempt.letter > 4) return;\n    const newBoard = [...board];\n    newBoard[currAttempt.attempt][currAttempt.letter] = key;\n    setBoard(newBoard);\n    setCurrAttempt({\n      attempt: currAttempt.attempt,\n      letter: currAttempt.letter + 1\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Wordle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: {\n        board,\n        setBoard,\n        currAttempt,\n        setCurrAttempt,\n        correctWord,\n        onSelectLetter,\n        onDelete,\n        onEnter,\n        setDisabledLetters,\n        disabledLetters,\n        gameOver\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game\",\n        children: [/*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Keyboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eiSb/TW79jGjxUDt/dbx/8bjC9Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Board","Keyboard","React","useState","createContext","generateWordSet","boardDefault","AppContext","App","board","setBoard","currAttempt","setCurrAttempt","attempt","letter","wordSet","setWordSet","Set","correctWord","setCorrectWord","disabledLetters","setDisabledLetters","gameOver","setGameOver","guessedWord","onEnter","currWord","i","has","toLowerCase","alert","console","log","onDelete","newBoard","onSelectLetter","key"],"sources":["/Users/int1347/Documents/React/wordel/src/App.js"],"sourcesContent":["import './App.css';\nimport Board from \"./Components/Board\";\nimport Keyboard from './Components/Keyboard';\nimport React from 'react';\nimport { useState} from 'react';\nimport { createContext } from 'react';\nimport { generateWordSet } from './word';\nimport { boardDefault } from './word';\n\nexport const AppContext = createContext();\n\nfunction App() {\n\n  const [board, setBoard] = useState(boardDefault);\n  const [currAttempt, setCurrAttempt] = useState({ attempt: 0, letter: 0 });\n  const [wordSet, setWordSet] = useState(new Set());\n  const [correctWord, setCorrectWord] = useState(\"\");\n  const [disabledLetters, setDisabledLetters] = useState([]);\n  const [gameOver, setGameOver] = useState({\n    gameOver: false,\n    guessedWord: false,\n  });\n\n  const onEnter = () => {\n    if (currAttempt.letter !== 5) return;\n\n    let currWord = \"\";\n    for (let i = 0; i < 5; i++) {\n      currWord += board[currAttempt.attempt][i];\n    }\n    if (wordSet.has(currWord.toLowerCase())) {\n      setCurrAttempt({ attempt: currAttempt.attempt + 1, letter: 0 });\n    } else {\n      alert(\"Word not found\");\n    }\n\n    if (currWord === correctWord) {\n      setGameOver({ gameOver: true, guessedWord: true });\n      return;\n    }\n    console.log(currAttempt);\n    if (currAttempt.attempt === 5) {\n      setGameOver({ gameOver: true, guessedWord: false });\n      return;\n    }\n  };\n\n  const onDelete = () => {\n    if (currAttempt.letter === 0) return;\n    const newBoard = [...board];\n    newBoard[currAttempt.attempt][currAttempt.letter - 1] = \"\";\n    setBoard(newBoard);\n    setCurrAttempt({ ...currAttempt, letter: currAttempt.letter - 1 });\n  };\n\n\n  const onSelectLetter = (key) => {\n    if (currAttempt.letter > 4) return;\n\n    const newBoard = [...board];\n\n    newBoard[currAttempt.attempt][currAttempt.letter] = key;\n    setBoard(newBoard);\n    setCurrAttempt({\n      attempt: currAttempt.attempt,\n      letter: currAttempt.letter + 1,\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <nav>\n        <h1>Wordle</h1>\n        \n        </nav>\n        <AppContext.Provider \n        value={{\n          board,\n          setBoard,\n          currAttempt,\n          setCurrAttempt,\n          correctWord,\n          onSelectLetter,\n          onDelete,\n          onEnter,\n          setDisabledLetters,\n          disabledLetters,\n          gameOver,\n        }\n        }>\n        <div className=\"game\">\n          <Board />\n          <Keyboard/>\n        </div>\n        </AppContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}